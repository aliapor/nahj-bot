import telebot
import json

# ÿ™Ÿà⁄©ŸÜ ÿ®ÿßÿ™
TOKEN = "8037640720:AAGrKf2KH488zKE48FYAehCX_bBnIQie-AQ"
bot = telebot.TeleBot(TOKEN)

# ÿ®ÿßÿ±⁄Øÿ∞ÿßÿ±€å ÿØÿßÿØŸá‚ÄåŸáÿß ÿßÿ≤ ŸÅÿß€åŸÑ JSON
with open("data.json", "r", encoding="utf-8") as f:
    data = json.load(f)

# ÿµŸÅÿ≠Ÿá‚Äåÿ®ŸÜÿØ€å
ITEMS_PER_PAGE = 20

# ŸÖŸÜŸà€å ÿßÿµŸÑ€å
main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row("üìú ÿÆÿ∑ÿ®Ÿá‚ÄåŸáÿß", "üì¨ ŸÜÿßŸÖŸá‚ÄåŸáÿß", "üíé ÿ≠⁄©ŸÖÿ™‚ÄåŸáÿß")

# ÿØ⁄©ŸÖŸá ÿ®ÿßÿ≤⁄Øÿ¥ÿ™
back_button = telebot.types.InlineKeyboardMarkup()
back_button.add(telebot.types.InlineKeyboardButton("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà€å ÿßÿµŸÑ€å", callback_data="back_to_main"))

# ÿ¥ÿ±Ÿàÿπ ÿ®ÿßÿ™
@bot.message_handler(commands=["start"])
def send_welcome(message):
    bot.send_message(message.chat.id, "ÿ≥ŸÑÿßŸÖ! ÿ®Ÿá ÿ±ÿ®ÿßÿ™ ŸÜŸáÿ¨‚ÄåÿßŸÑÿ®ŸÑÿßÿ∫Ÿá ÿÆŸàÿ¥ ÿßŸàŸÖÿØ€å üåü\n€å⁄©€å ÿßÿ≤ ⁄Øÿ≤€åŸÜŸá‚ÄåŸáÿß€å ÿ≤€åÿ± ÿ±Ÿà ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ:", reply_markup=main_menu)

# ÿßŸÜÿ™ÿÆÿßÿ® ÿßÿ≤ ŸÖŸÜŸà
@bot.message_handler(func=lambda msg: msg.text in ["üìú ÿÆÿ∑ÿ®Ÿá‚ÄåŸáÿß", "üì¨ ŸÜÿßŸÖŸá‚ÄåŸáÿß", "üíé ÿ≠⁄©ŸÖÿ™‚ÄåŸáÿß"])
def handle_menu(message):
    section = get_section_key(message.text)
    send_items_list(message.chat.id, section, page=1)

# ÿßÿ±ÿ≥ÿßŸÑ ŸÑ€åÿ≥ÿ™ ÿ®ÿß ÿµŸÅÿ≠Ÿá‚Äåÿ®ŸÜÿØ€å
def send_items_list(chat_id, section, page):
    items = list(data[section].items())
    start = (page - 1) * ITEMS_PER_PAGE
    end = start + ITEMS_PER_PAGE
    paginated = items[start:end]

    text = f"üóÇ {section} (ÿµŸÅÿ≠Ÿá {page})\n\n"
    for key, _ in paginated:
        text += f"‚Ä¢ {key}\n"

    keyboard = telebot.types.InlineKeyboardMarkup()
    for key, _ in paginated:
        keyboard.add(telebot.types.InlineKeyboardButton(key, callback_data=f"{section}:{key}"))

    nav = []
    if page > 1:
        nav.append(telebot.types.InlineKeyboardButton("‚¨ÖÔ∏è ŸÇÿ®ŸÑ€å", callback_data=f"{section}_page_{page - 1}"))
    if end < len(items):
        nav.append(telebot.types.InlineKeyboardButton("‚û°Ô∏è ÿ®ÿπÿØ€å", callback_data=f"{section}_page_{page + 1}"))
    if nav:
        keyboard.row(*nav)
    keyboard.add(telebot.types.InlineKeyboardButton("üè† ŸÖŸÜŸà€å ÿßÿµŸÑ€å", callback_data="back_to_main"))
    bot.send_message(chat_id, text, reply_markup=keyboard)

# ⁄©ŸÑ€å⁄© ÿ±Ÿà€å ÿØ⁄©ŸÖŸá‚ÄåŸáÿß
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == "back_to_main":
        bot.send_message(call.message.chat.id, "ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà€å ÿßÿµŸÑ€å ‚òòÔ∏è", reply_markup=main_menu)
    elif "_page_" in call.data:
        section, _, page = call.data.partition("_page_")
        send_items_list(call.message.chat.id, section, int(page))
    elif ":" in call.data:
        section, key = call.data.split(":")
        content = data[section][key]
        bot.send_message(call.message.chat.id, f"üìñ {key}:\n\n{content}", reply_markup=back_button)

# ŸÜ⁄Øÿßÿ¥ÿ™ ÿπŸÜŸàÿßŸÜ ÿ®Ÿá ⁄©ŸÑ€åÿØ ÿØ€å⁄©ÿ¥ŸÜÿ±€å
def get_section_key(text):
    return {
        "üìú ÿÆÿ∑ÿ®Ÿá‚ÄåŸáÿß": "ÿÆÿ∑ÿ®Ÿá‚ÄåŸáÿß",
        "üì¨ ŸÜÿßŸÖŸá‚ÄåŸáÿß": "ŸÜÿßŸÖŸá‚ÄåŸáÿß",
        "üíé ÿ≠⁄©ŸÖÿ™‚ÄåŸáÿß": "ÿ≠⁄©ŸÖÿ™‚ÄåŸáÿß"
    }[text]

# ÿßÿ¨ÿ±ÿß€å ÿ±ÿ®ÿßÿ™
print("ü§ñ ÿ±ÿ®ÿßÿ™ ÿØÿ± ÿ≠ÿßŸÑ ÿßÿ¨ÿ±ÿßÿ≥ÿ™...")
bot.infinity_polling()
